#!/usr/bin/env node
'use strict';

const yaml = require('js-yaml');
const fs = require('fs');
const xml = require('xml2js');
const translate = require('../translate');

const args = (() => {
    const argparse = require('argparse');
    const parser = new argparse.ArgumentParser({
      version: '0.1.0',
      addHelp: true,
      description: 'xlf-translate populates translation files based on keys'
    });

    parser.addArgument([ '-l', '--lang-file' ], {
        help: 'file containing translations (YAML)',
        required: true
    });

    parser.addArgument([ '-m', '--messages-file' ], {
        help: 'messages file to process',
        required: true
    });

    parser.addArgument([ '-f', '--force' ], {
        help: 'overwrites existing translations',
        defaultValue: false,
        action: 'storeTrue'
    });

    return parser.parseArgs();
})();

const langData = fs.readFileSync(args.lang_file);
const lang = yaml.safeLoad(langData);

const messageData = fs.readFileSync(args.messages_file);
const parser = new xml.Parser();
parser.parseString(messageData, (err, result) => {
    if (err) {
        console.log('Oops, error occurred');
        throw err;
    }

    const stats = translate(result, lang, args.force);

    const builder = new xml.Builder();
    const out = builder.buildObject(result);

    fs.writeFileSync(args.messages_file, out);
    console.log(`Done. Replaced ${stats.count} units, skipped ${stats.skip}.`);
});

